[{"E:\\Proyectos\\React\\journal\\src\\index.js":"1","E:\\Proyectos\\React\\journal\\src\\JournalApp.js":"2","E:\\Proyectos\\React\\journal\\src\\components\\routers\\AppRouter.js":"3","E:\\Proyectos\\React\\journal\\src\\components\\routers\\AuthRouter.js":"4","E:\\Proyectos\\React\\journal\\src\\components\\auth\\LoginScreen.js":"5","E:\\Proyectos\\React\\journal\\src\\components\\auth\\RegisterScreen.js":"6","E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalScreen.js":"7","E:\\Proyectos\\React\\journal\\src\\components\\journal\\Sidebar.js":"8","E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalEntries.js":"9","E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalEntry.js":"10","E:\\Proyectos\\React\\journal\\src\\components\\journal\\NothingSelected.js":"11","E:\\Proyectos\\React\\journal\\src\\components\\notes\\NoteScreen.js":"12","E:\\Proyectos\\React\\journal\\src\\components\\notes\\NoteAppBar.js":"13","E:\\Proyectos\\React\\journal\\src\\store\\store.js":"14","E:\\Proyectos\\React\\journal\\src\\reducers\\authReducer.js":"15","E:\\Proyectos\\React\\journal\\src\\types\\types.js":"16","E:\\Proyectos\\React\\journal\\src\\hooks\\useForm.js":"17","E:\\Proyectos\\React\\journal\\src\\actions\\auth.js":"18","E:\\Proyectos\\React\\journal\\src\\firebase\\firebase-config.js":"19","E:\\Proyectos\\React\\journal\\src\\reducers\\uiReducer.js":"20","E:\\Proyectos\\React\\journal\\src\\actions\\ui.js":"21","E:\\Proyectos\\React\\journal\\src\\components\\routers\\PrivateRoutes.js":"22","E:\\Proyectos\\React\\journal\\src\\components\\routers\\PublicRoutes.js":"23"},{"size":268,"mtime":1611186988963,"results":"24","hashOfConfig":"25"},{"size":352,"mtime":1611186917104,"results":"26","hashOfConfig":"25"},{"size":1499,"mtime":1611281830770,"results":"27","hashOfConfig":"25"},{"size":908,"mtime":1611107354300,"results":"28","hashOfConfig":"25"},{"size":2742,"mtime":1611206190239,"results":"29","hashOfConfig":"25"},{"size":3493,"mtime":1611202968208,"results":"30","hashOfConfig":"25"},{"size":439,"mtime":1611115472998,"results":"31","hashOfConfig":"25"},{"size":949,"mtime":1611286556178,"results":"32","hashOfConfig":"25"},{"size":315,"mtime":1611113221761,"results":"33","hashOfConfig":"25"},{"size":782,"mtime":1611114371366,"results":"34","hashOfConfig":"25"},{"size":213,"mtime":1611115100782,"results":"35","hashOfConfig":"25"},{"size":845,"mtime":1611115644328,"results":"36","hashOfConfig":"25"},{"size":413,"mtime":1611114870889,"results":"37","hashOfConfig":"25"},{"size":547,"mtime":1611200666492,"results":"38","hashOfConfig":"25"},{"size":364,"mtime":1611282259437,"results":"39","hashOfConfig":"25"},{"size":247,"mtime":1611205804430,"results":"40","hashOfConfig":"25"},{"size":446,"mtime":1611187657133,"results":"41","hashOfConfig":"25"},{"size":1985,"mtime":1611287030093,"results":"42","hashOfConfig":"25"},{"size":669,"mtime":1611191321452,"results":"43","hashOfConfig":"25"},{"size":719,"mtime":1611205860861,"results":"44","hashOfConfig":"25"},{"size":429,"mtime":1611206079516,"results":"45","hashOfConfig":"25"},{"size":620,"mtime":1611282156694,"results":"46","hashOfConfig":"25"},{"size":607,"mtime":1611282063535,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"5tuffv",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"E:\\Proyectos\\React\\journal\\src\\index.js",["103"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppRouter } from './components/routers/AppRouter';\nimport { JournalApp } from './JournalApp';\nimport './styles/style.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n",["104","105"],"E:\\Proyectos\\React\\journal\\src\\JournalApp.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\routers\\AppRouter.js",["106"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {firebase} from '../../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoutes';\r\nimport { PublicRoute } from './PublicRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setchecking] = useState(true)\r\n  const [logged, setlogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged( user =>{\r\n      if(user?.uid){\r\n        dispatch(login(user.uid, user.displayName));\r\n        setlogged(true);\r\n      }\r\n      else{\r\n        setlogged(false);\r\n      }\r\n      setchecking(false);\r\n    });\r\n  }, [dispatch])\r\n\r\n  if (checking){\r\n    return (\r\n      <h1> Cargando ... </h1>\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <HashRouter>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated = {logged}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n            isAuthenticated = {logged}\r\n          />\r\n\r\n          <Redirect to= \"/auth/login\" />\r\n          \r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\routers\\AuthRouter.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\auth\\LoginScreen.js",["107"],"import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport { login, startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector( state => state.ui);\r\n\r\n    const [formValues, handleIpuntChange] = useForm({\r\n        email: 'h@fasd.com',\r\n        password : '123456'\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log(email,password);\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n\r\n    }\r\n    return (\r\n        <>\r\n           <h3 className = 'auth__title'>Login</h3> \r\n           <form onSubmit = {handleLogin}>\r\n                <input \r\n                    type = 'text'\r\n                    placeholder = 'Email'\r\n                    name = 'email'\r\n                    className='auth__input'\r\n                    autoComplete = 'off'\r\n                    value = {email}\r\n                    onChange = {handleIpuntChange}\r\n                />\r\n                <input \r\n                    type = 'password'\r\n                    placeholder = \"Password\"\r\n                    name = 'password'\r\n                    className='auth__input'\r\n                    value = {password}\r\n                    onChange = {handleIpuntChange}\r\n                />\r\n                <button\r\n                    type = 'submit'\r\n                    className = \"btn btn-primary btn-block\"\r\n                    disabled = {loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className = 'auth__social-networks'>\r\n                    <p>\r\n                        Login with social networks\r\n                    </p>\r\n                </div>\r\n                <div \r\n                    className=\"google-btn\"\r\n                    onClick = {handleGoogleLogin}\r\n                >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                    <p className=\"btn-text\">\r\n                        <b>Sign in with google</b>\r\n                    </p>\r\n                </div>\r\n\r\n                <Link to = '/auth/register' className = 'auth__social-networks'>\r\n                    Create new account\r\n                </Link>\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\auth\\RegisterScreen.js",["108"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { store } from '../../store/store'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        username : 'Hernando',\r\n        email : 'h@fasd.com',\r\n        password : '123456',\r\n        confirm : '123456',\r\n    });\r\n\r\n    const {username,email,password,confirm} = formValues;\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,username));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if(username.trim().length === 0){\r\n            dispatch(setError('The username is required'));\r\n            return false;\r\n        }\r\n        else if( !validator.isEmail(email)){\r\n            dispatch(setError('The email must be valid'));\r\n            return false;\r\n        }\r\n        else if( password !== confirm || password.length < 5){\r\n            dispatch(setError('Check the password'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Register</h3>\r\n            <form onSubmit = {handleRegister}>\r\n\r\n                {\r\n                    msgError !== '' &&\r\n                    <div className = \"auth__alert-error\" >\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    name='username'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    onChange = {handleInputChange}\r\n                    value = {username}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    onChange = {handleInputChange}\r\n                    value = {email}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder=\"Password\"\r\n                    name='password'\r\n                    className='auth__input'\r\n                    onChange = {handleInputChange}\r\n                    value = {password}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder=\"Confirm password\"\r\n                    name='confirm'\r\n                    className='auth__input'\r\n                    onChange = {handleInputChange}\r\n                    value = {confirm}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className=\"btn btn-primary btn-block mt-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to='/auth/login' className='auth__social-networks'>\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalScreen.js",["109"],"import React from 'react'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    return (\r\n        <div className='journal__main-content'>\r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {/* <NothingSelected /> */}\r\n                <NoteScreen/>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\journal\\Sidebar.js",["110"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, startLogout } from '../../actions/auth';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () =>{\r\n    dispatch(startLogout());\r\n  }\r\n\r\n  const {name} = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <aside className='journal__sidebar'>\r\n      <div className='journal__sidebar-navbar'>\r\n        \r\n        <h3 className = 'mt-5'>\r\n          <i className= 'far fa-moon'/>\r\n          <span> {name} </span>\r\n        </h3>\r\n\r\n        <button className = \"btn\" onClick = {handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className= 'journal__new-entry'>\r\n        <i className = 'far fa-calendar-plus fa-5x'/>\r\n        <p className = 'mt-5'>New Entry</p>\r\n      </div>\r\n\r\n      <JournalEntries/>\r\n\r\n    </aside>\r\n  )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalEntries.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\journal\\JournalEntry.js",[],["111","112"],"E:\\Proyectos\\React\\journal\\src\\components\\journal\\NothingSelected.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\notes\\NoteScreen.js",["113"],"import React from 'react'\r\nimport { NoteAppBar } from './NoteAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n   return (\r\n      <div className = 'notes__main-content'>\r\n         <NoteAppBar />\r\n         <div className = 'notes__content'>\r\n            <input \r\n               type = 'text'\r\n               placeholder = 'Awesome title'\r\n               className = \"notes__title-input\"\r\n            />\r\n            <textarea\r\n               placeholder = 'What happened today?'\r\n               className = 'notes__textarea'\r\n            >\r\n            </textarea>\r\n            <div className = 'notes__image'>\r\n               <img\r\n                  src = 'https://loadedlandscapes.com/wp-content/uploads/2019/07/lighting.jpg'\r\n                  alt = 'Note image'\r\n               />\r\n\r\n            </div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","E:\\Proyectos\\React\\journal\\src\\components\\notes\\NoteAppBar.js",[],"E:\\Proyectos\\React\\journal\\src\\store\\store.js",[],"E:\\Proyectos\\React\\journal\\src\\reducers\\authReducer.js",[],"E:\\Proyectos\\React\\journal\\src\\types\\types.js",[],"E:\\Proyectos\\React\\journal\\src\\hooks\\useForm.js",[],"E:\\Proyectos\\React\\journal\\src\\actions\\auth.js",[],"E:\\Proyectos\\React\\journal\\src\\firebase\\firebase-config.js",[],"E:\\Proyectos\\React\\journal\\src\\reducers\\uiReducer.js",[],"E:\\Proyectos\\React\\journal\\src\\actions\\ui.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\routers\\PrivateRoutes.js",[],"E:\\Proyectos\\React\\journal\\src\\components\\routers\\PublicRoutes.js",[],{"ruleId":"114","severity":1,"message":"115","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":19},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":4,"column":3,"nodeType":"116","messageId":"117","endLine":4,"endColumn":8},{"ruleId":"114","severity":1,"message":"123","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":15},{"ruleId":"114","severity":1,"message":"125","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":16},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":20,"column":16,"nodeType":"131","endLine":23,"endColumn":18},"no-unused-vars","'AppRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'Route' is defined but never used.","'login' is defined but never used.","'store' is defined but never used.","'NothingSelected' is defined but never used.","'logout' is defined but never used.",["132"],["133"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]