{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoutes.js","components/routers/PublicRoutes.js","components/routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","icon","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NoteAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","delete","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","NothingSelected","setError","err","removeLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","handleIpuntChange","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","username","confirm","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","match","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setchecking","logged","setlogged","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2aa0246c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n   apiKey: \"AIzaSyCGLlWVm8Uufdkt-1PaSjQt6IWjfkiYRRs\",\r\n   authDomain: \"react-apps-cursos-4b4aa.firebaseapp.com\",\r\n   projectId: \"react-apps-cursos-4b4aa\",\r\n   storageBucket: \"react-apps-cursos-4b4aa.appspot.com\",\r\n   messagingSenderId: \"740087695719\",\r\n   appId: \"1:740087695719:web:ff0c5d55ac63cccb3887c2\"\r\n };\r\n // Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n const db = firebase.firestore();\r\n\r\n const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n export{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n }","\r\nexport const fileUpload = async(file) => {\r\n   const cloudUrl = 'https://api.cloudinary.com/v1_1/jz-tests/upload'\r\n   const formData = new FormData ();\r\n   formData.append('upload_preset', 'react-journal');\r\n   formData.append('file', file);\r\n\r\n   try {\r\n      const resp = await fetch(cloudUrl,{\r\n         method: 'POST',\r\n         body: formData\r\n      })\r\n\r\n      if(resp.ok){\r\n         const cloudResp = await resp.json();\r\n         return cloudResp.secure_url;\r\n      }\r\n      else{\r\n         throw await resp.json();\r\n      }\r\n\r\n   } catch (error) {\r\n      throw error;\r\n   }\r\n}\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) =>{\r\n   const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n   const notes = [];\r\n\r\n   notesSnap.forEach( snapChild =>{\r\n      notes.push({\r\n         id:snapChild.id,\r\n         ...snapChild.data()\r\n      })\r\n   })\r\n   // console.log(notes)\r\n   // console.log(notesSnap);\r\n   return notes;\r\n}","export const types ={\r\n   login : '[auth] login',\r\n   logout : '[auth] logout',\r\n\r\n   uiSetError : '[UI] Set Error',\r\n   uiRemoveError: '[UI] Remove Error',\r\n   uiStartLoading: '[UI] Start Loading',\r\n   uiFinishLoading: '[UI] Finish Loading',\r\n\r\n   notesAddNew : '[Notes] Add New',\r\n   notesActive : '[Notes] Set active note',\r\n   notesLoad : '[Notes] Load notes',\r\n   notesUpdated : '[Notes] Updated note',\r\n   notesFileUrl : '[Notes] Updated image url',\r\n   notesDelete : '[Notes] Delete note',\r\n   notesLogoutCleaning : '[Notes] Logout Cleaning',\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startNewNote = () => {\r\n   return async(dispatch, getState)=>{\r\n      const uid = getState().auth.uid;\r\n\r\n      const newNote = {\r\n         title : '',\r\n         body: '',\r\n         date: new Date().getTime(),\r\n      }\r\n\r\n      const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n   \r\n      dispatch(activeNote(doc.id, newNote));\r\n      dispatch(addNewNote(doc.id, newNote));\r\n   }\r\n}\r\n\r\nexport const activeNote = (id,note) =>({\r\n   type: types.notesActive,\r\n   payload : {\r\n      id,\r\n      ...note,\r\n   }\r\n})\r\n\r\nexport const addNewNote = (id,note) =>({\r\n   type: types.notesAddNew,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) =>{\r\n   return async(dispatch) =>{\r\n      const notes = await loadNotes(uid);\r\n      dispatch(setNotes(notes));\r\n   }\r\n}\r\n\r\nexport const setNotes = (notes) =>{\r\n   return {\r\n      type: types.notesLoad,\r\n      payload : notes,\r\n   }\r\n}\r\n\r\nexport const startSaveNote = (note) =>{\r\n   return async(dispatch, getState) =>{\r\n      const {uid} = getState().auth;\r\n      if(!note.url){\r\n         delete note.url;\r\n      }\r\n      const noteToFirestore = {...note};\r\n      delete noteToFirestore.id;\r\n      await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n      \r\n      dispatch(refreshNote(note.id,note));\r\n      \r\n      Swal.fire({\r\n         icon: 'success',\r\n         title: 'Your note has been saved',\r\n       })\r\n   }\r\n}\r\n\r\nexport const refreshNote = (id, note)=>({\r\n   type: types.notesUpdated,\r\n   payload: {\r\n      id,\r\n      note:{\r\n         id,\r\n         ...note\r\n      }\r\n   }\r\n})\r\n\r\nexport const startUploading = (file) =>{\r\n   return async(dispatch, getState) => {\r\n      const {active:activeNote} = getState().notes;\r\n      Swal.fire({\r\n         title: 'Uploading ...',\r\n         text: 'Please wait ...',\r\n         allowOutsideClick : false,\r\n         showConfirmButton: false,\r\n         onBeforeOpen: () =>{\r\n            Swal.showLoading();\r\n         }\r\n      })\r\n      \r\n      const fileUrl = await fileUpload(file);\r\n      activeNote.url = fileUrl;\r\n      dispatch(startSaveNote (activeNote));\r\n      Swal.close();\r\n\r\n   }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n   return async(dispatch, getState) =>{\r\n      const uid = getState().auth.uid;\r\n      await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n      dispatch(deleteNote(id));\r\n   }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n   type: types.notesDelete,\r\n   payload : id\r\n})\r\n\r\n\r\nexport const cleanNotes = () =>({\r\n   type : types.notesLogoutCleaning,\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cleanNotes, startDeleting, startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NoteAppBar = () => {\r\n\r\n   const dispatch = useDispatch();\r\n   const {active} = useSelector(state => state.notes)\r\n\r\n   const handleSave = () =>{\r\n      dispatch(startSaveNote(active));\r\n   }\r\n\r\n   const handlePictureClick = () => {\r\n      document.querySelector('#fileSelector').click();\r\n   }\r\n\r\n   const handleFileChange = (e) => {\r\n\r\n         const file = e.target.files[0];\r\n      if(file){\r\n         dispatch(startUploading(file));\r\n      }\r\n   }\r\n   \r\n   const handleDeleteNote = ()=>{\r\n      // console.log(active.id);\r\n      dispatch(startDeleting(active.id));\r\n   }\r\n\r\n\r\n   return (\r\n      <div className = 'notes__appbar'>\r\n         <span>\r\n            28 de agosto 2020\r\n         </span>\r\n\r\n         <input \r\n            id = 'fileSelector'\r\n            type = \"file\"\r\n            name = 'file'\r\n            style = {{display: 'none'}}\r\n            onChange = {handleFileChange}\r\n         />\r\n\r\n         <div>\r\n            <button className = 'btn' onClick = {handleDeleteNote}>\r\n               Delete\r\n            </button>\r\n            <button className = 'btn' onClick = {handlePictureClick}>\r\n               Picture\r\n            </button>\r\n\r\n            <button className = 'btn' onClick = {handleSave}>\r\n               Save\r\n            </button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NoteAppBar } from './NoteAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const {active:note} = useSelector(state => state.notes)\r\n\r\n   const [formValues, handleInputChange, reset] = useForm(note);\r\n   const {body,title} = formValues;\r\n\r\n   const activeId = useRef(note.id);\r\n\r\n   useEffect(() => {\r\n      if(note.id !== activeId.current){\r\n         reset(note);\r\n         activeId.current = note.id\r\n      }\r\n   }, [note, reset])\r\n\r\n   useEffect(() => {\r\n      dispatch(activeNote(formValues.id, {...formValues}));\r\n   }, [formValues, dispatch])\r\n\r\n   return (\r\n      <div className = 'notes__main-content animate__animated animate__fadeIn animate__faster'>\r\n         <NoteAppBar />\r\n         <div className = 'notes__content'>\r\n            <input \r\n               type = 'text'\r\n               placeholder = 'Awesome title'\r\n               className = \"notes__title-input\"\r\n               value = {title}\r\n               onChange = {handleInputChange}\r\n               name = 'title'\r\n            />\r\n            <textarea\r\n               placeholder = 'What happened today?'\r\n               className = 'notes__textarea'\r\n               value = {body}\r\n               onChange = {handleInputChange}\r\n               name = 'body'\r\n            >\r\n            </textarea>\r\n\r\n            {\r\n               (note.url) &&\r\n               <div className = 'notes__image animate__animated animate__bounceInUp animate_faster' >\r\n               <img\r\n                  src = {`${note.url}`}\r\n                  alt = 'Descriptive journal'\r\n               />\r\n            </div>\r\n            }\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n   return (\r\n      <div className = 'nothing__main-content'>\r\n         {/* <i className = 'far fa-star fa-2x '/> */}\r\n         <p>\r\n            Select something\r\n         </p>\r\n      </div>\r\n   )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => {\r\n   return {\r\n      type: types.uiSetError,\r\n      payload: err\r\n   }\r\n}\r\n\r\nexport const removeError = () => {\r\n   return{\r\n      type: types.uiRemoveError\r\n   }\r\n}\r\n\r\nexport const setLoading = () =>{\r\n   return{\r\n      type: types.uiStartLoading,\r\n   }\r\n}\r\n\r\nexport const removeLoading = () =>{\r\n   return{\r\n      type: types.uiFinishLoading,\r\n   }\r\n}","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'\r\nimport { removeLoading, setLoading } from \"./ui\"\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n   return ( dispatch ) => {\r\n      dispatch(setLoading());\r\n      firebase.auth().signInWithEmailAndPassword(email,password)\r\n         .then( ({user}) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n            dispatch(removeLoading());\r\n         })\r\n         .catch (e => {\r\n            console.log(e)\r\n            dispatch(removeLoading());\r\n            Swal.fire({\r\n               icon: 'error',\r\n               title: 'Oops...',\r\n               text: e.message,\r\n             })\r\n         })\r\n   }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password, name) =>{\r\n   return (dispatch) =>{\r\n      firebase.auth().createUserWithEmailAndPassword(email,password)\r\n         .then( async ({user}) =>{\r\n            await user.updateProfile({\r\n               displayName : name,\r\n            });\r\n            console.log(user);\r\n            dispatch(login(user.uid,user.displayName))\r\n         }).catch (e => {\r\n            Swal.fire({\r\n               icon: 'error',\r\n               title: 'Oops...',\r\n               text: e.message,\r\n             })\r\n         })\r\n   }\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n   return (dispatch) =>{\r\n      firebase.auth().signInWithPopup(googleAuthProvider)\r\n         .then(({user}) =>{\r\n            dispatch(login(user.uid,user.displayName))\r\n         })\r\n   }\r\n}\r\n\r\nexport const login = (uid, displayName) =>{\r\n   return{\r\n      type : types.login,\r\n      payload : {\r\n         uid,\r\n         displayName\r\n      }\r\n   }\r\n}\r\n\r\nexport const startLogout = ()=>{\r\n   return async (dispatch) => {\r\n      await firebase.auth().signOut();\r\n      dispatch(logout());\r\n   }\r\n}\r\n\r\nexport const logout = () =>{\r\n   return {\r\n      type:types.logout,\r\n   };\r\n}","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({title, body, date, id, url}) => {\r\n  \r\n  const noteDate = moment(date);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = ()=>{\r\n    dispatch(activeNote(id, { date,title,body,url}));\r\n  }\r\n\r\n  return (\r\n    <div className = 'journal__entry pointer' onClick= {handleEntryClick}>\r\n      \r\n      {\r\n      url &&\r\n      (<div \r\n        className = 'journal__entry-picture'\r\n        style= {{\r\n          backgroundSize: 'cover',\r\n          backgroundImage : `url(${url})`,\r\n        }}\r\n      >\r\n\r\n      </div>)\r\n      }\r\n\r\n      <div className = 'journal__entry-body'>\r\n        <p className = 'journal__entry-title'>\r\n          {title}\r\n        </p>\r\n        <p className = 'journal__entry-content'>\r\n          {body}\r\n        </p> \r\n      </div>\r\n      <div className = 'journal__entry-date-box'>\r\n        {noteDate.format('dddd')}\r\n        <h4>\r\n          {noteDate.format('Do')}\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n  const {notes} = useSelector(state => state.notes)\r\n\r\n  return (\r\n    <div className = 'journal__entries'>\r\n      {\r\n        notes.map( note => <JournalEntry key={note.id} {...note}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { cleanNotes, startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () =>{\r\n    dispatch(startLogout());\r\n    dispatch(cleanNotes());\r\n  }\r\n\r\n  const {name} = useSelector(state => state.auth);\r\n\r\n  const handleAddNew = () =>{\r\n    dispatch(startNewNote() );\r\n  }\r\n\r\n  return (\r\n    <aside className='journal__sidebar'>\r\n      <div className='journal__sidebar-navbar'>\r\n        \r\n        <h3 className = 'mt-5'>\r\n          <i className= 'far fa-moon'/>\r\n          <span> {name} </span>\r\n        </h3>\r\n\r\n        <button className = \"btn\" onClick = {handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div \r\n        className= 'journal__new-entry'\r\n        onClick = {handleAddNew}\r\n      >\r\n        <i className = 'far fa-calendar-plus fa-5x'/>\r\n        <p className = 'mt-5'>New Entry</p>\r\n      </div>\r\n\r\n      <JournalEntries/>\r\n\r\n    </aside>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__main-content animate__animated animate__fadeIn animate_faster'>\r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? <NoteScreen/>\r\n                        : <NothingSelected />\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector( state => state.ui);\r\n\r\n    const [formValues, handleIpuntChange] = useForm({\r\n        email: '',\r\n        password : ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log(email,password);\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n\r\n    }\r\n    return (\r\n        <>\r\n           <h3 className = 'auth__title'>Login</h3> \r\n           <form onSubmit = {handleLogin} className = 'animate__animated animate__fadeIn'>\r\n                <input \r\n                    type = 'text'\r\n                    placeholder = 'Email'\r\n                    name = 'email'\r\n                    className='auth__input'\r\n                    autoComplete = 'off'\r\n                    value = {email}\r\n                    onChange = {handleIpuntChange}\r\n                />\r\n                <input \r\n                    type = 'password'\r\n                    placeholder = \"Password\"\r\n                    name = 'password'\r\n                    className='auth__input'\r\n                    value = {password}\r\n                    onChange = {handleIpuntChange}\r\n                />\r\n                <button\r\n                    type = 'submit'\r\n                    className = \"btn btn-primary btn-block\"\r\n                    disabled = {loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className = 'auth__social-networks'>\r\n                    <p>\r\n                        Login with social networks\r\n                    </p>\r\n                </div>\r\n                <div \r\n                    className=\"google-btn\"\r\n                    onClick = {handleGoogleLogin}\r\n                >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                    <p className=\"btn-text\">\r\n                        <b>Sign in with google</b>\r\n                    </p>\r\n                </div>\r\n\r\n                <Link to = '/auth/register' className = 'auth__social-networks'>\r\n                    Create new account\r\n                </Link>\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        username : '',\r\n        email : '',\r\n        password : '',\r\n        confirm : '',\r\n    });\r\n\r\n    const {username,email,password,confirm} = formValues;\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,username));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if(username.trim().length === 0){\r\n            dispatch(setError('The username is required'));\r\n            return false;\r\n        }\r\n        else if( !validator.isEmail(email)){\r\n            dispatch(setError('The email must be valid'));\r\n            return false;\r\n        }\r\n        else if( password !== confirm || password.length < 5){\r\n            dispatch(setError('Check the password'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Register</h3>\r\n            <form onSubmit = {handleRegister} className = 'animate__animated animate__fadeIn'>\r\n\r\n                {\r\n                    msgError !== '' &&\r\n                    <div className = \"auth__alert-error\" >\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    name='username'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    onChange = {handleInputChange}\r\n                    value = {username}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    onChange = {handleInputChange}\r\n                    value = {email}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder=\"Password\"\r\n                    name='password'\r\n                    className='auth__input'\r\n                    onChange = {handleInputChange}\r\n                    value = {password}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder=\"Confirm password\"\r\n                    name='confirm'\r\n                    className='auth__input'\r\n                    onChange = {handleInputChange}\r\n                    value = {confirm}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className=\"btn btn-primary btn-block mt-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to='/auth/login' className='auth__social-networks'>\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = ({ match}) => {\r\n   // console.log(match.path);\r\n   return (\r\n      <>        \r\n         <div className='auth__main'>\r\n            <div className = 'auth__box-container'>\r\n            <Switch>\r\n               <Route \r\n                  exact \r\n                  path= '/auth/login'\r\n                  component={LoginScreen}\r\n               />\r\n               \r\n               <Route \r\n                  exact \r\n                  path='/auth/register'\r\n                  component={RegisterScreen} \r\n               />\r\n               \r\n               <Redirect to='/auth/login' />\r\n               \r\n            </Switch>\r\n\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n} \r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props)=>{\r\n                return (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : ( <Redirect  to = '/auth/login' /> )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props)=>{\r\n                return (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : ( <Redirect  to = '/' /> )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Switch,\r\n  HashRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {firebase} from '../../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoutes';\r\nimport { PublicRoute } from './PublicRoutes';\r\nimport { startLoadingNotes } from '../../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setchecking] = useState(true)\r\n  const [logged, setlogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged( async user =>{\r\n      if(user?.uid){\r\n        dispatch(login(user.uid, user.displayName));\r\n        setlogged(true);\r\n        dispatch(startLoadingNotes(user.uid));\r\n\r\n      }\r\n      else{\r\n        setlogged(false);\r\n      }\r\n      setchecking(false);\r\n    });\r\n  }, [dispatch, setchecking, setlogged])\r\n\r\n  if (checking){\r\n    return (\r\n      <h1 className = 'auth__main'> Loading ... </h1>\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <HashRouter>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated = {logged}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n            isAuthenticated = {logged}\r\n          />\r\n\r\n          <Redirect to= \"/auth/login\" />\r\n          \r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   notes: [],\r\n   active : null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) =>{\r\n   switch (action.type) {\r\n      case types.notesActive:\r\n         return{\r\n            ...state,\r\n            active:{\r\n               ...action.payload\r\n            }\r\n         }\r\n      case types.notesAddNew:\r\n         return{\r\n            ...state,\r\n            notes: [action.payload, ...state.notes]\r\n         }\r\n      case types.notesLoad:\r\n         return{\r\n            ...state,\r\n            notes : [...action.payload]\r\n         }\r\n      case types.notesUpdated:\r\n         return{\r\n            ...state,\r\n            notes: state.notes.map( \r\n               note => note.id === action.payload.id\r\n                  ? action.payload.note\r\n                  : note\r\n               )\r\n         }\r\n      case types.notesDelete:\r\n         return{\r\n            ...state,\r\n            active : null,\r\n            notes: state.notes.filter(note=>note.id !== action.payload)\r\n         }\r\n      case types.notesLogoutCleaning:\r\n         return{\r\n            ...state,\r\n            active:null,\r\n            notes : [],\r\n         }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   loading : false,\r\n   msgError : ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n   switch (action.type) {\r\n      case types.uiSetError:\r\n         return {\r\n            ...state,\r\n            msgError : action.payload\r\n         }\r\n      case types.uiRemoveError:\r\n         return {\r\n            ...state,\r\n            msgError : '',\r\n         };\r\n      case types.uiStartLoading:\r\n         return{\r\n            ...state,\r\n            loading: true\r\n         }\r\n      case types.uiFinishLoading:\r\n         return{\r\n            ...state,\r\n            loading : false,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { createStore, combineReducers, applyMiddleware,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n   auth: authReducer,\r\n   ui : uiReducer,\r\n   notes : notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n   reducers,\r\n   composeEnhancers(\r\n      applyMiddleware(thunk)\r\n   )\r\n   );","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n   switch (action.type) {\r\n      case types.login:\r\n         return {\r\n            uid: action.payload.uid,\r\n            name : action.payload.displayName\r\n         };\r\n      case types.logout:\r\n         return {};\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/style.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}